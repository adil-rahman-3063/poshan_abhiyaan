import 'package:flutter/material.dart';
import 'package:gsheets/gsheets.dart';
import 'package:flutter/services.dart';
import '../homepage/user_homepage.dart';
import '../homepage/asha_homepage.dart';

const _credentials = 'assets/service_account.json'; // Google Sheets API credentials
const _spreadsheetId = '1v_G04Plro5XMZL9XYfoH_KS5gF6ntlb7ovw8Z4tWjHA';

class GoogleSheetsService {
  late final GSheets _gsheets;
  late final Spreadsheet _spreadsheet;
  Worksheet? _usersSheet;
  Worksheet? _ashaWorkersSheet;
  Worksheet? _eventsSheet;
  Worksheet? _adminNotificationSheet; // ✅ Fixed variable name
  bool _isInitialized = false;

  GoogleSheetsService();

  /// ✅ Initialize Google Sheets Service
  Future<void> init() async {
    if (_isInitialized) return;

    try {
      print("⏳ Initializing Google Sheets...");
      final credentials = await rootBundle.loadString(_credentials);
      _gsheets = GSheets(credentials);
      _spreadsheet = await _gsheets.spreadsheet(_spreadsheetId);

      _usersSheet = await _getOrCreateSheet('asha_user');
      _ashaWorkersSheet = await _getOrCreateSheet('asha_workers');
      _eventsSheet = await _getOrCreateSheet('events');
      _adminNotificationSheet = await _getOrCreateSheet('admin_notifications');

      _isInitialized = true;
      print("✅ Google Sheets Initialized Successfully");
    } catch (e) {
      print("❌ Error Initializing Google Sheets: $e");
    }
  }

  /// ✅ Insert Admin Notification
  Future<void> insertAdminNotification(String name, String blockNumber) async {
    await init();

    if (_adminNotificationSheet == null) {
      print('❌ Admin Notification Sheet Not Found!');
      return;
    }

    try {
      await _adminNotificationSheet!.values.appendRow([
        '$name ($blockNumber) verification pending'
      ]);

      print('✅ Notification Added: $name ($blockNumber) verification pending');
    } catch (e) {
      print('❌ Error Adding Notification: $e');
    }
  }

  /// ✅ Fetch Admin Notifications
  Future<List<String>> fetchAdminNotifications() async {
    await init();

    if (_adminNotificationSheet == null) {
      print('❌ Admin Notification Sheet Not Found!');
      return [];
    }

    try {
      final allRows = await _adminNotificationSheet!.values.allRows();
      return allRows.map((row) => row.isNotEmpty ? row[0] : '').toList();
    } catch (e) {
      print('❌ Error Fetching Notifications: $e');
      return [];
    }
  }

  /// ✅ Delete Admin Notification
  Future<void> deleteAdminNotification(int rowIndex) async {
    await init();

    if (_adminNotificationSheet == null) {
      print('❌ Admin Notification Sheet Not Found!');
      return;
    }

    try {
      await _adminNotificationSheet!.deleteRow(rowIndex + 1);
      print('✅ Notification Deleted (Row $rowIndex)');
    } catch (e) {
      print('❌ Error Deleting Notification: $e');
    }
  }

  /// ✅ Get or Create a Worksheet
  Future<Worksheet> _getOrCreateSheet(String title) async {
    try {
      final sheet = _spreadsheet.worksheetByTitle(title);
      return sheet ?? await _spreadsheet.addWorksheet(title);
    } catch (e) {
      print("❌ Error Accessing Sheet $title: $e");
      rethrow;
    }
  }
}